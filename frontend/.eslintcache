[{"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/index.js":"1","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/App.js":"2","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/pages/Home/Home.js":"3","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Base.js":"4","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Header/Header.js":"5","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Footer/Footer.js":"6","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/auth/index.js":"7","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/backend.js":"8","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/Signin.js":"9","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/helper/helper.js":"10","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/Signup.js":"11","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/auth/PrivateRoutes.js":"12","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/Profile/Profile.js":"13","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Left/Left.js":"14","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Right/Right.js":"15","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/AddBook/AddBook.js":"16","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/auth/AdminRoutes.js":"17","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/helper.js":"18","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/Success.js":"19","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/UpdateBook/UpdateBook.js":"20","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/Dashboard/Dashboard.js":"21","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Card.js":"22"},{"size":412,"mtime":1608659131627,"results":"23","hashOfConfig":"24"},{"size":1237,"mtime":1608717429591,"results":"25","hashOfConfig":"24"},{"size":187,"mtime":1608659192999,"results":"26","hashOfConfig":"24"},{"size":533,"mtime":1608721875493,"results":"27","hashOfConfig":"24"},{"size":1331,"mtime":1608659408211,"results":"28","hashOfConfig":"24"},{"size":0,"mtime":1608658764112,"results":"29","hashOfConfig":"24"},{"size":1498,"mtime":1608658488295,"results":"30","hashOfConfig":"24"},{"size":47,"mtime":1608658441868,"results":"31","hashOfConfig":"24"},{"size":3479,"mtime":1608660276481,"results":"32","hashOfConfig":"24"},{"size":2485,"mtime":1608707866533,"results":"33","hashOfConfig":"24"},{"size":3051,"mtime":1608660374905,"results":"34","hashOfConfig":"24"},{"size":571,"mtime":1608658561137,"results":"35","hashOfConfig":"24"},{"size":2673,"mtime":1608708973613,"results":"36","hashOfConfig":"24"},{"size":1664,"mtime":1608703504932,"results":"37","hashOfConfig":"24"},{"size":1629,"mtime":1608703509892,"results":"38","hashOfConfig":"24"},{"size":5357,"mtime":1608712376890,"results":"39","hashOfConfig":"24"},{"size":604,"mtime":1608709592143,"results":"40","hashOfConfig":"24"},{"size":2459,"mtime":1608711068373,"results":"41","hashOfConfig":"24"},{"size":485,"mtime":1608711884709,"results":"42","hashOfConfig":"24"},{"size":5776,"mtime":1608716487920,"results":"43","hashOfConfig":"24"},{"size":1209,"mtime":1608724332048,"results":"44","hashOfConfig":"24"},{"size":1446,"mtime":1608724028867,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"foas89",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/index.js",[],["96","97"],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/App.js",["98"],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/pages/Home/Home.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Base.js",["99"],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Header/Header.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Footer/Footer.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/auth/index.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/backend.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/Signin.js",["100"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport logo from '../../assets/logo.png'\nimport './helper/styles.css'\n\nimport { signin, authenticate, isAuthenticated } from \"./helper/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAuthenticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n          console.log(\"signin failed\")\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n            console.log(\"signin successful\")\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />;\n      } else {\n        return <Redirect to=\"/\" />;\n      }\n    }\n    if (isAuthenticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"loading__message\">\n          <h1>Loading...</h1>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"\">\n        <div className=\"\">\n          <div\n            className=\"message__error\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n\n  const signInForm = () => {\n    return (\n        <div className=\"login\">\n        <Link to=\"/\">\n          <img\n            className=\"login__logo\"\n            src={logo}\n          />\n        </Link>\n  \n        <div className=\"login__container\">\n          <h1>Login</h1>\n  \n          <form>\n            <h5>E-mail</h5>\n            <input\n              type=\"text\"\n              value={email}\n              onChange={handleChange(\"email\")}\n            />\n  \n            <h5>Password</h5>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={handleChange(\"password\")}\n            />\n  \n            <button\n              type=\"submit\"\n              onClick={onSubmit}\n              className=\"login__signInButton\"\n            >\n              Sign In\n            </button>\n          </form>\n  \n          <p>\n          By continuing, you agree to Library's Conditions of Use and Privacy Notice.\n          </p>\n  \n          <p style={{\"text-align\":\"center\"}}>\n          Not a user? <Link to=\"/signup\">Register here</Link>\n          </p>\n          <Link to=\"/signup\">\n            <button className=\"login__registerButton\">\n              Create your Account here\n            </button>\n          </Link>\n        </div>\n      </div>);\n  };\n\n  return (\n    <div>\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n      {/* <p className=\"text-white text-center\">{JSON.stringify(values)}</p> */}\n    </div>\n  );\n};\n\nexport default Signin;","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/helper/helper.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/Signup.js",["101"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"./helper/helper\";\nimport \"./helper/styles.css\";\nimport logo from \"../../assets/logo.png\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: \"\",\n  });\n\n\n  const { name, email, password,error, success } = values;\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    signup({ name, email, password })\n      .then((data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, success: false });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            success: true,\n          });\n        \n        }\n      })\n      .catch(() => {\n        console.log(\"error in signup\");\n      });\n  };\n\n  const signUpForm = () => {\n    return (\n      <div className=\"login\">\n        <Link to=\"/\">\n          <img className=\"login__logo\" src={logo} />\n        </Link> \n\n        <div className=\"login__container\">\n          <h1>Create Account</h1>\n         \n          <form>\n            <h5>Your name</h5>\n            <input type=\"text\" value={name} onChange={handleChange(\"name\")} />\n            \n            <h5>E-mail</h5>\n            <input type=\"text\" value={email} onChange={handleChange(\"email\")} />\n\n            <h5>Password</h5>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={handleChange(\"password\")}\n            />\n\n            <button\n              type=\"submit\"\n              onClick={onSubmit}\n              className=\"login__signInButton\"\n            >\n              Register\n            </button>\n          </form>\n\n          <p style={{ \"text-align\": \"center\" }}>\n            Already have an account? <Link to=\"/signin\">Sign in</Link>\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"\">\n        <div className=\"\">\n          <div\n            className=\"message__error\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const successMessage = () => {\n    return (\n      <div className=\"\">\n        <div className=\"\">\n          <div\n            className=\"message__success\"\n            style={{ display: success ? \"\" : \"none\" }}\n          >\n            New account was created successfully. Please{\" \"}\n            <Link to=\"/signin\">Login here</Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div>\n      {successMessage()}\n      {errorMessage()}\n      {signUpForm()}\n      {/* <p className=\"text-light text-center\">{JSON.stringify(values)}</p> */}\n    </div>\n  );\n};\n\nexport default Signup;\n","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/auth/PrivateRoutes.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/user/Profile/Profile.js",["102","103","104","105","106"],"import React, { useEffect, useState } from 'react'\nimport Base from '../../../shared/Base';\nimport { getUser, isAuthenticated, deleteUser, signout,updateUser } from '../helper/helper'\nimport './Profile.css'\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Link, Redirect } from \"react-router-dom\";\n\nfunction Profile() {\n    const {user}  = isAuthenticated()\n    const [data, setData] = useState({});\n    const [name, setName] = useState(\"\")\n    const [edit, setEdit] = useState(false)\n\n    useEffect(() => {\n        getUser(user._id)\n        .then(res => {\n            if(res.error){\n                console.log(res.error);\n            }\n            else{\n                setData(res);\n                setName(res.name)\n            }\n        })\n    }, [])\n\n    const deleteP = (id) => {\n        if (window.confirm(\"Do you want delete this account\") === true) {\n          deleteUser(id)\n            .then((res) => console.log(res),signout())\n            .catch((err) => console.log(err));\n        }\n      };\n\n      const UpdateUsr = () => {\n        updateUser({name},user._id)\n        .then(res => {\n        console.log(res)\n        setEdit(false)\n        let usr = localStorage.getItem(\"jwt\")\n        usr = JSON.parse(usr)\n        console.log(usr.user)\n        usr.user.name = name\n        localStorage.setItem(\"jwt\", JSON.stringify(usr))\n        })\n        .catch(err => console.log(err))\n      }\n\n    return (\n        <Base>\n        <div className=\"profile\">\n        <div className=\"profile__details\">\n            {edit ? (\n                <div className=\"profile__info\">\n            <h5>Your name</h5>\n            <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n            <button\n              type=\"submit\"\n              onClick={UpdateUsr}\n              className=\"login__signInButton\"\n            >\n              Update\n            </button>\n        </div>\n            ) : (\n                <>\n <div className=\"profile__info\">\n            <h2>\n              <span className=\"profile__info__span\">Name: </span> {name}\n            </h2>\n            <h3>\n              <span className=\"profile__info__span\">Email: </span> {user.email}\n            </h3>\n           \n          </div>\n          <a className=\"profile__delete\" >\n                <EditIcon onClick={() => setEdit(true)}/>\n                </a>\n          <a className=\"profile__delete\" href=\"/signin\">\n            <DeleteIcon onClick={() => deleteP(user._id)} />\n            </a>\n            </>\n            )}\n         \n        \n        \n        </div>\n       \n\n      </div>\n      </Base>\n    )\n}\n\nexport default Profile\n","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Left/Left.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Right/Right.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/AddBook/AddBook.js",["107"],"import React, { useState, useEffect } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport {isAuthenticated} from '../../auth/index'\nimport {createBook} from '../helper'\nimport Base from '../../../shared/Base'\nimport \"./AddBook.css\";\nimport Success from '../Success'\n\nconst AddBook = () => {\n  const { token, user } = isAuthenticated();\n \n  const [values, setValues] = useState({\n    name: \"\",\n    imageUrl: \"\",\n    author: \"\",\n    publisher: \"\",\n    category:\"\",\n    error: \"\",\n    success: \"\",\n  });\n  const { name, imageUrl, author, publisher, category, error, success } = values;\n\n  const [src, selectedFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    selectedFile(URL.createObjectURL(e.target.files[0]));\n  };\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(null);\n\n  const [crop, setCrop] = useState({ aspect: 1 / 1 });\n\n  function getCroppedImg() {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\n    setResult(base64Image);\n    setValues({ ...values, imageUrl: base64Image });\n  }\n\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    setValues({ ...values, [name]: value });\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\" });\n    console.log(\"values\", values);\n    createBook(token, user._id, values).then((data) => {\n      console.log(\"data\", data);\n      if(data === undefined){\n        setValues({...values, error: \"Image size is large!!!! \"})\n      } \n      else if (data.err) {\n        setValues({ ...values, error: data.err });\n      }\n       else {\n        setValues({\n          ...values,\n          name: \"\",\n          imageUrl: \"\",\n          author: \"\",\n          publisher:\"\",\n          category:\"\",\n          error: \"\",\n          success: \"true\",\n        });\n      }\n    });\n  };\n\n  const errorMessage = () => (\n    <div className=\"message__error\" style={{ display: error ? \"\" : \"none\" }}>\n      <h4>{error}</h4>\n    </div>\n  );\n  const createBookPortion = () => {\n    return (\n      <Base>\n        <div className=\"addbook\">\n          {src ? (\n            <div className=\"addbook__image\">\n              {src && (\n                <div className=\"addbook__src\">\n                  <div className=\"addbook__pic\">\n                    <ReactCrop\n                      src={src}\n                      onImageLoaded={setImage}\n                      crop={crop}\n                      onChange={setCrop}\n                      className=\"addbook__photo\"\n                    />\n                  </div>\n                  <div className=\"addbook__crop\">\n                    <button\n                      className=\"addbook__crop__button\"\n                      onClick={getCroppedImg}\n                    >\n                      Crop Image\n                    </button>\n                  </div>\n                </div>\n              )}\n              {result && (\n                <div className=\"addbook__result\">\n                  <h1>Selected image</h1>\n                  <img src={imageUrl} alt=\"\" className=\"addbook__photo\" />\n                  {/* {console.log(imageUrl)} */}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"\">\n              <div className=\"\">\n                <div className=\"\">\n                  <input\n                    type=\"file\"\n                    accept=\"/image/*\"\n                    onChange={handleFileChange}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"addbook__title__section\">\n            <h2 className=\"addbook__title\">Name</h2>\n            <input\n              onChange={handleChange(\"name\")}\n              className=\"\"\n            />\n            <h2 className=\"addbook__title\">Author</h2>\n            <input\n              onChange={handleChange(\"author\")}\n              className=\"\"\n            />\n            <h2 className=\"addbook__title\">Publisher</h2>\n            <input\n              onChange={handleChange(\"publisher\")}\n              className=\"\"\n            />\n            <h2 className=\"addbook__title\">Category</h2>\n            <input\n              onChange={handleChange(\"category\")}\n              className=\"\"\n            />\n          </div>\n\n          \n         \n          {name && imageUrl && publisher && category && author && (\n            <div className=\"addbook__submit\">\n              <button className=\"addbook__submit__btn\" onClick={onSubmit}>\n                Publish\n              </button>\n            </div>\n          )}\n        </div>\n      </Base>\n    );\n  };\n\n  if (!success) {\n    return (\n      <div>\n        {errorMessage()}\n        {createBookPortion()}\n      </div>\n    );\n  } else {\n    return <Success />;\n  }\n};\nexport default AddBook;\n","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/auth/AdminRoutes.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/helper.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/Success.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/UpdateBook/UpdateBook.js",["108"],"import React, { useState, useEffect } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport {isAuthenticated} from '../../auth/index'\nimport { getBook, updateBook} from '../helper'\nimport Base from '../../../shared/Base'\nimport \"./UpdateBook.css\";\nimport Success from '../Success'\n\nconst UpdateBook = ({match}) => {\n\n\n  useEffect(() => {\n    getBook(match.params.bookId)\n    .then(res => {\n      setValues({name: res.name, imageUrl: res.imageUrl, author: res.author, publisher: res.publisher, category: res.category})\n    })\n    .catch(err => console.log(err))\n  }, [])\n\n  const { token, user } = isAuthenticated();\n \n  const [values, setValues] = useState({\n    name: \"\",\n    imageUrl: \"\",\n    author: \"\",\n    publisher: \"\",\n    category:\"\",\n    error: \"\",\n    success: \"\",\n  });\n  const { name, imageUrl, author, publisher, category, error, success } = values;\n\n  const [src, selectedFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    selectedFile(URL.createObjectURL(e.target.files[0]));\n  };\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(null);\n\n  const [crop, setCrop] = useState({ aspect: 1 / 1 });\n\n  function getCroppedImg() {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\n    setResult(base64Image);\n    setValues({ ...values, imageUrl: base64Image });\n  }\n\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    setValues({ ...values, [name]: value });\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\" });\n    console.log(\"values\", values);\n    updateBook(token, match.params.bookId,user._id, values).then((data) => {\n      console.log(\"data\", data);\n      if(data === undefined){\n        setValues({...values, error: \"Image size is large!!!! \"})\n      } \n      else if (data.err) {\n        setValues({ ...values, error: data.err });\n      }\n       else {\n        setValues({\n          ...values,\n          name: \"\",\n          imageUrl: \"\",\n          author: \"\",\n          publisher:\"\",\n          category:\"\",\n          error: \"\",\n          success: \"true\",\n        });\n      }\n    });\n  };\n\n  const errorMessage = () => (\n    <div className=\"message__error\" style={{ display: error ? \"\" : \"none\" }}>\n      <h4>{error}</h4>\n    </div>\n  );\n  const createBookPortion = () => {\n    return (\n      <Base>\n        <div className=\"addbook\">\n          {src ? (\n            <div className=\"addbook__image\">\n              {src && (\n                <div className=\"addbook__src\">\n                  <div className=\"addbook__pic\">\n                    <ReactCrop\n                      src={src}\n                      onImageLoaded={setImage}\n                      crop={crop}\n                      onChange={setCrop}\n                      className=\"addbook__photo\"\n                    />\n                  </div>\n                  <div className=\"addbook__crop\">\n                    <button\n                      className=\"addbook__crop__button\"\n                      onClick={getCroppedImg}\n                    >\n                      Crop Image\n                    </button>\n                  </div>\n                </div>\n              )}\n              {result && (\n                <div className=\"addbook__result\">\n                  <h1>Selected image</h1>\n                  <img src={imageUrl} alt=\"\" className=\"addbook__photo\" />\n                  {/* {console.log(imageUrl)} */}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"\">\n              <div className=\"\">\n                <div className=\"\">\n                  <input\n                    type=\"file\"\n                    accept=\"/image/*\"\n                    onChange={handleFileChange}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"addbook__title__section\">\n            <h2 className=\"addbook__title\">Name</h2>\n            <input\n              value={name}\n              onChange={handleChange(\"name\")}\n              className=\"\"\n            />\n            <h2 className=\"addbook__title\">Author</h2>\n            <input\n              onChange={handleChange(\"author\")}\n              className=\"\"\n              value={author}\n            />\n            <h2 className=\"addbook__title\">Publisher</h2>\n            <input\n              onChange={handleChange(\"publisher\")}\n              className=\"\"\n              value={publisher}\n            />\n            <h2 className=\"addbook__title\">Category</h2>\n            <input\n              onChange={handleChange(\"category\")}\n              className=\"\"\n              value={category}\n            />\n          </div>\n\n          \n         \n          {name && imageUrl && publisher && category && author && (\n            <div className=\"addbook__submit\">\n              <button className=\"addbook__submit__btn\" onClick={onSubmit}>\n                Update\n              </button>\n            </div>\n          )}\n        </div>\n      </Base>\n    );\n  };\n\n  if (!success) {\n    return (\n      <div>\n        {errorMessage()}\n        {createBookPortion()}\n      </div>\n    );\n  } else {\n    return <Success />;\n  }\n};\nexport default UpdateBook;\n","/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/components/books/Dashboard/Dashboard.js",[],"/home/rithesh/Rithu/Project/LibraryManagementSystem/backend/frontend/src/shared/Card.js",["109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":32,"nodeType":"116","messageId":"117","endLine":3,"endColumn":36},{"ruleId":"114","severity":1,"message":"118","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":88,"column":11,"nodeType":"121","endLine":91,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":51,"column":11,"nodeType":"121","endLine":51,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":7,"column":10,"nodeType":"116","messageId":"117","endLine":7,"endColumn":14},{"ruleId":"114","severity":1,"message":"122","line":7,"column":16,"nodeType":"116","messageId":"117","endLine":7,"endColumn":24},{"ruleId":"114","severity":1,"message":"123","line":11,"column":12,"nodeType":"116","messageId":"117","endLine":11,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":26,"column":8,"nodeType":"126","endLine":26,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":77,"column":11,"nodeType":"121","endLine":77,"endColumn":43},{"ruleId":"114","severity":1,"message":"130","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"131","line":19,"column":6,"nodeType":"126","endLine":19,"endColumn":8,"suggestions":"132"},{"ruleId":"128","severity":1,"message":"129","line":32,"column":17,"nodeType":"121","endLine":32,"endColumn":81},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.","ArrayExpression",["135"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.bookId'. Either include it or remove the dependency array.",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [user._id]",{"range":"141","text":"142"},"Update the dependencies array to be: [match.params.bookId]",{"range":"143","text":"144"},[812,814],"[user._id]",[621,623],"[match.params.bookId]"]